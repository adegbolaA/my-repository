

#$ ssh-agent /bin/sh
#$ ssh-add $yourkey


AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an Auto Scaling Group behind an ALB
Parameters:
  pvpcId: 
    Description: VPC for AutoScaling
    Type: AWS::EC2::VPC::Id

  pSubnetId:
    Description: Subnets where ALB can send traffic
    Type: List<AWS::EC2::Subnet::Id>
    
    
Resources:
  MyLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      GroupName: SecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref pvpcId

  EC2LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: AutoScalingLoadBalancer
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt MyLoadBalancerSecurityGroup.GroupId
      Subnets: !Ref pSubnetId
      Tags:
        - Key: Name
          Value: loadBalancer
      Type: application

  rListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
      - TargetGroupArn: !Ref rTargetGroup
        Type: forward
      LoadBalancerArn: !Ref EC2LoadBalancer
      Port: 80
      Protocol: HTTP

  rTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: TargetGroupForASG
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref pvpcId

     
  rLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0aa7d40eeae50c9a9
        InstanceType: t2.micro
        KeyName: firstKey
        SecurityGroupIds:
          - !GetAtt MyLoadBalancerSecurityGroup.GroupId
        UserData: !Base64 |
            #! /bin/bash -x
            yum update -y
            amazon-linux-extras install epel -y
            yum install -y stress
            yum install -y httpd
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4`
            DATE_TIME=`date`
            chmod -R 777 /var/www/html
            echo "<html>
            <head>
                <title> Congratulations! You have created an instance from Launch Template</title>
            </head>
            <body>
                <h1>This web server is launched from launch template by ALTAZ</h1>
                <p>This instance is created at <b>$DATE_TIME</b></p>
                <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
            </body>
            </html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd
      LaunchTemplateName: LaunchTemplateForASG
    #  TagSpecifications:
    #  - ResourceType: instance
      #  Tags:
       #   - Key: Name
          #  Value: Kevin-ASG-Server


  rAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "1"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref rLaunchTemplate
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
        - !Ref rTargetGroup
      VPCZoneIdentifier: !Ref pSubnetId

  
  rAutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref rAutoScalingGroup
      EstimatedInstanceWarmup: 90
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification: 
          PredefinedMetricType: ASGAverageCPUUtilization      
        TargetValue: 60.0

#Outputs: